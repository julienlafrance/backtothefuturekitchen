name: CD - Production Deployment

on:
  workflow_dispatch:  # Déclenchement MANUEL uniquement
    inputs:
      confirm:
        description: 'Taper "DEPLOY" pour confirmer le déploiement en production'
        required: true
        default: ''

jobs:
  deploy-prod:
    name: Deploy to Production
    runs-on: self-hosted
    # Vérifier que l'utilisateur a bien tapé "DEPLOY"
    if: github.event.inputs.confirm == 'DEPLOY'

    steps:
      - name: Notify deployment start
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"🚨 **Déploiement PRODUCTION démarré**\n📦 Commit: \`${GITHUB_SHA:0:7}\`\n💬 Message: ${COMMIT_MSG_FIRST_LINE}\n👤 Par: ${{ github.actor }}\n⚠️  Déploiement manuel confirmé\n\n**Étapes:**\n1️⃣ Backup PROD actuel\n2️⃣ Pull code depuis GitHub\n3️⃣ Exécution deploy_preprod_to_prod.sh\n4️⃣ Redémarrage container (down && up)\n5️⃣ Health checks (100s)\n\n⏱️ Durée estimée: ~3 minutes\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

      - name: Backup current production files
        run: |
          cd /home/dataia25/mangetamain
          BACKUP_DIR="/home/dataia25/mangetamain/backups/prod/backup-$(date +%Y%m%d_%H%M%S)"
          echo "📝 Création backup PROD versionné dans: $BACKUP_DIR"

          mkdir -p "$BACKUP_DIR"

          # Backup complet: streamlit, pyproject.toml, README.md
          cp -r 20_prod/streamlit "$BACKUP_DIR/"
          [ -f 20_prod/pyproject.toml ] && cp 20_prod/pyproject.toml "$BACKUP_DIR/"
          [ -f 20_prod/README.md ] && cp 20_prod/README.md "$BACKUP_DIR/"

          # Sauvegarder le chemin du backup pour rollback
          echo "$BACKUP_DIR" > /tmp/prod-backup-path.txt

          # Vérifier le backup
          BACKUP_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
          echo "✅ Backup PROD créé: $BACKUP_SIZE"
          echo "📁 Contenu du backup:"
          ls -lh "$BACKUP_DIR/"

          # Lister tous les backups existants
          echo "📂 Backups PROD disponibles:"
          ls -lht /home/dataia25/mangetamain/backups/prod/ | head -5

      - name: Deploy PREPROD to PROD
        run: |
          cd /home/dataia25/mangetamain
          echo "🚀 Exécution du script de déploiement PREPROD → PROD"
          ./70_scripts/deploy_preprod_to_prod.sh
          echo "✅ Fichiers copiés de PREPROD vers PROD"

      - name: Restart production container
        run: |
          cd /home/dataia25/mangetamain/30_docker
          echo "🔄 Arrêt du container PROD..."
          docker-compose -f docker-compose-prod.yml down

          echo "🚀 Démarrage du container PROD avec nouveaux mounts..."
          docker-compose -f docker-compose-prod.yml up -d

          echo "✅ Container production redémarré (down && up pour nouveaux mounts)"

      - name: Wait for container to start
        run: |
          echo "⏳ Attente démarrage Streamlit production..."
          echo "   - Installation dépendances (uv sync): ~90s"
          echo "   - Démarrage Streamlit: ~10s"
          sleep 90
          echo "✅ Délai d'attente terminé"

      - name: Health check production
        run: |
          echo "🔍 Test santé production sur https://backtothefuturekitchen.lafrance.io/"
          echo ""

          # Test Docker container health
          echo "🐳 Vérification statut container Docker..."
          if docker ps --format '{{.Names}}\t{{.Status}}' | grep -q "mange_prod.*healthy"; then
            echo "✅ Container Docker: healthy"
          else
            echo "⚠️  Container Docker pas encore healthy, attente..."
          fi
          echo ""

          # Retry 10 fois avec 10s d'intervalle
          for i in {1..10}; do
            echo "🌐 Test HTTP $i/10..."

            if curl -f -s --max-time 10 https://backtothefuturekitchen.lafrance.io/ > /dev/null; then
              echo "   ✅ Site accessible (HTTP 200)"

              if curl -s https://backtothefuturekitchen.lafrance.io/ | grep -q "Back to the Kitchen\|Streamlit\|streamlit"; then
                echo "   ✅ Contenu Streamlit détecté"
                echo ""
                echo "🎉 Production déployée avec succès!"
                exit 0
              else
                echo "   ⚠️  Réponse HTTP mais contenu inattendu"
              fi
            else
              echo "   ❌ Site non accessible"
              if [ $i -lt 10 ]; then
                echo "   ⏳ Attente 10s avant nouvelle tentative..."
                sleep 10
              fi
            fi
          done

          echo ""
          echo "❌ Production health check échoué après 10 tentatives (100s)"
          exit 1

      - name: Notify deployment success
        if: success()
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          BACKUP_DIR=$(cat /tmp/prod-backup-path.txt 2>/dev/null || echo "inconnu")
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"✅ **Déploiement PRODUCTION réussi!**\n\n🌐 **URL:** https://backtothefuturekitchen.lafrance.io/\n📦 **Commit:** \`${GITHUB_SHA:0:7}\`\n💬 **Message:** ${COMMIT_MSG_FIRST_LINE}\n\n**Détails:**\n✅ Backup créé: \`$BACKUP_DIR\`\n✅ Script deploy_preprod_to_prod.sh exécuté\n✅ Container redémarré (down && up)\n✅ Health checks passés\n✅ Données chargées depuis S3 Parquet\n\n🕐 $(date +'%Y-%m-%d %H:%M:%S')\n👤 Déployé par: ${{ github.actor }}\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

      - name: Notify deployment failure
        if: failure()
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          BACKUP_DIR=$(cat /tmp/prod-backup-path.txt 2>/dev/null || echo "inconnu")
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"🚨 **ÉCHEC - Déploiement PRODUCTION**\n❌ Health check échoué\n📦 Source: PREPROD → PROD\n💬 ${COMMIT_MSG_FIRST_LINE}\n⚠️  **PRODUCTION POTENTIELLEMENT CASSÉE**\n\n**Rollback manuel recommandé:**\n\`\`\`bash\nssh dataia\ncd /home/dataia25/mangetamain/20_prod\n\n# Restaurer le backup complet\nrm -rf streamlit pyproject.toml README.md\ncp -r $BACKUP_DIR/streamlit .\ncp $BACKUP_DIR/pyproject.toml .\ncp $BACKUP_DIR/README.md .\n\n# Redémarrer le container\ncd /home/dataia25/mangetamain/30_docker\ndocker-compose -f docker-compose-prod.yml down\ndocker-compose -f docker-compose-prod.yml up -d\n\`\`\`\n\n📂 Backup: \`$BACKUP_DIR\`\n🌐 Vérifier: https://backtothefuturekitchen.lafrance.io/\n👤 Tenté par: ${{ github.actor }}\n🕐 $(date +'%Y-%m-%d %H:%M:%S')\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

  cancelled:
    name: Deployment Cancelled
    runs-on: self-hosted
    if: github.event.inputs.confirm != 'DEPLOY'

    steps:
      - name: Notify cancellation
        run: |
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"⚠️  **Déploiement PRODUCTION annulé**\nConfirmation incorrecte (attendu: DEPLOY)\n👤 Par: ${{ github.actor }}\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"
