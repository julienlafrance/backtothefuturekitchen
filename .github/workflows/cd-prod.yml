name: CD - Production Deployment

on:
  workflow_dispatch:  # Déclenchement MANUEL uniquement
    inputs:
      confirm:
        description: 'Taper "DEPLOY" pour confirmer le déploiement en production'
        required: true
        default: ''

jobs:
  deploy-prod:
    name: Deploy to Production
    runs-on: self-hosted
    # Vérifier que l'utilisateur a bien tapé "DEPLOY"
    if: github.event.inputs.confirm == 'DEPLOY'

    steps:
      - name: Notify deployment start
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"🚨 **Déploiement PRODUCTION démarré**\n📦 Commit: \`${GITHUB_SHA:0:7}\`\n💬 Message: ${COMMIT_MSG_FIRST_LINE}\n👤 Par: ${{ github.actor }}\n⚠️  Déploiement manuel confirmé\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

      - name: Backup current production files
        run: |
          cd /home/dataia25/mangetamain
          BACKUP_DIR="/home/dataia25/mangetamain/backups/prod/backup-$(date +%Y%m%d_%H%M%S)"
          echo "📝 Création backup PROD versionné dans: $BACKUP_DIR"

          mkdir -p "$BACKUP_DIR"
          cp -r 20_prod/streamlit/* "$BACKUP_DIR/"

          # Sauvegarder le chemin du backup pour rollback
          echo "$BACKUP_DIR" > /tmp/prod-backup-path.txt

          # Vérifier le backup
          BACKUP_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
          echo "✅ Backup PROD créé: $BACKUP_SIZE"
          ls -lh "$BACKUP_DIR/" | head -10

          # Lister tous les backups existants
          echo "📂 Backups PROD disponibles:"
          ls -lht /home/dataia25/mangetamain/backups/prod/ | head -5

      - name: Pull latest code
        run: |
          cd /home/dataia25/mangetamain
          git fetch origin
          git reset --hard origin/main
          NEW_COMMIT=$(git rev-parse --short HEAD)
          echo "✅ Code repository mis à jour vers $NEW_COMMIT"
          echo "$NEW_COMMIT" > /tmp/prod-commit.txt

      - name: Deploy PREPROD to PROD
        run: |
          cd /home/dataia25/mangetamain
          echo "🚀 Exécution du script de déploiement PREPROD → PROD"
          ./deploy_preprod_to_prod.sh
          echo "✅ Fichiers copiés de PREPROD vers PROD"

      - name: Restart production container
        run: |
          cd /home/dataia25/mangetamain/30_docker
          docker-compose -f docker-compose-prod.yml restart
          echo "✅ Container production redémarré"

      - name: Wait for container to start
        run: |
          echo "⏳ Attente démarrage Streamlit production (60s)..."
          sleep 60

      - name: Health check production
        run: |
          echo "🔍 Test santé production sur https://backtothefuturekitchen.lafrance.io/"

          # Retry 10 fois avec 10s d'intervalle
          for i in {1..10}; do
            echo "Tentative $i/10..."

            if curl -f -s --max-time 10 https://backtothefuturekitchen.lafrance.io/ > /dev/null; then
              echo "✅ Production est accessible!"

              if curl -s https://backtothefuturekitchen.lafrance.io/ | grep -q "Back to the Kitchen\|Streamlit\|streamlit"; then
                echo "✅ Production répond correctement"
                exit 0
              else
                echo "⚠️  Production répond mais contenu inattendu"
              fi
            else
              echo "❌ Production non accessible, attente 10s..."
              sleep 10
            fi
          done

          echo "❌ Production health check échoué après 10 tentatives"
          exit 1

      - name: Notify deployment success
        if: success()
        run: |
          BACKUP_DIR=$(cat /tmp/prod-backup-path.txt 2>/dev/null || echo "inconnu")
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"✅ **Déploiement PRODUCTION réussi!**\n🌐 URL: https://backtothefuturekitchen.lafrance.io/\n📦 Commit: \`${GITHUB_SHA:0:7}\`\n💬 ${COMMIT_MSG_FIRST_LINE}\n📂 Backup: \`$BACKUP_DIR\`\n🕐 $(date +'%Y-%m-%d %H:%M:%S')\n👤 Déployé par: ${{ github.actor }}\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          BACKUP_DIR=$(cat /tmp/prod-backup-path.txt 2>/dev/null || echo "inconnu")
          NEW_COMMIT=$(cat /tmp/prod-commit.txt 2>/dev/null || echo "${GITHUB_SHA:0:7}")
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          COMMIT_MSG_FIRST_LINE=$(echo "$COMMIT_MSG" | head -1)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"🚨 **ÉCHEC - Déploiement PRODUCTION**\n❌ Health check échoué\n📦 Commit tenté: \`$NEW_COMMIT\`\n💬 ${COMMIT_MSG_FIRST_LINE}\n⚠️  **PRODUCTION POTENTIELLEMENT CASSÉE**\n\n**Options:**\n1️⃣ Corriger l'erreur directement en PROD\n2️⃣ Rollback manuel vers backup:\n\`\`\`bash\nssh dataia\ncd /home/dataia25/mangetamain/20_prod/streamlit\nrm -rf *\ncp -r $BACKUP_DIR/* .\ncd /home/dataia25/mangetamain/30_docker\ndocker-compose -f docker-compose-prod.yml restart\n\`\`\`\n\n📂 Backup disponible: \`$BACKUP_DIR\`\n🌐 Vérifier: https://backtothefuturekitchen.lafrance.io/\n👤 Tenté par: ${{ github.actor }}\n🕐 $(date +'%Y-%m-%d %H:%M:%S')\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"

  cancelled:
    name: Deployment Cancelled
    runs-on: self-hosted
    if: github.event.inputs.confirm != 'DEPLOY'

    steps:
      - name: Notify cancellation
        run: |
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"⚠️  **Déploiement PRODUCTION annulé**\nConfirmation incorrecte (attendu: DEPLOY)\n👤 Par: ${{ github.actor }}\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"
