name: CD Pipeline - Déploiement

on:
  push:
    branches:
      - main  # Déploiement automatique uniquement sur main
  workflow_dispatch:  # Permet déploiement manuel

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    # Ne déployer que si les tests passent
    needs: []

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build Docker image - Production
        run: |
          cd 30_docker
          echo "=== Construction de l'image Docker de production ==="
          docker build -f Dockerfile.prod -t mangetamain-analytics:prod ../20_prod

      - name: Test Docker image
        run: |
          echo "=== Test de l'image Docker ==="
          docker run --rm mangetamain-analytics:prod python --version

      - name: Tag Docker image
        run: |
          docker tag mangetamain-analytics:prod mangetamain-analytics:latest
          docker tag mangetamain-analytics:prod mangetamain-analytics:$(date +%Y%m%d-%H%M%S)

      # OPTIONNEL: Push vers un registry Docker
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #
      # - name: Push to Docker Hub
      #   run: |
      #     docker push mangetamain-analytics:latest
      #     docker push mangetamain-analytics:prod

      # OPTIONNEL: Déploiement SSH vers serveur
      # - name: Deploy to server via SSH
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       cd /path/to/mangetamain
      #       git pull origin main
      #       cd 30_docker
      #       docker-compose -f docker-compose-prod.yml pull
      #       docker-compose -f docker-compose-prod.yml up -d --force-recreate

      - name: Deployment summary
        run: |
          echo "=== Résumé du déploiement ==="
          echo "✅ Image Docker construite avec succès"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Date: $(date)"
          echo ""
          echo "Pour activer le déploiement automatique:"
          echo "1. Configurer les secrets GitHub (DOCKER_USERNAME, DOCKER_PASSWORD, etc.)"
          echo "2. Décommenter les étapes de push Docker et/ou SSH dans ce workflow"

  deploy-preprod:
    name: Deploy to Preprod
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'  # Preprod pour les autres branches

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image - Preprod
        run: |
          cd 30_docker
          echo "=== Construction de l'image Docker de preprod ==="
          docker build -f Dockerfile.preprod -t mangetamain-analytics:preprod ../10_preprod || echo "Dockerfile preprod non trouvé, skip"

      - name: Deployment info
        run: |
          echo "=== Déploiement Preprod ==="
          echo "Branch: ${{ github.ref_name }}"
          echo "Cette branche déclencherait un déploiement preprod si configuré"
